name: Validate Terraform and Create Pull Request

on:
  pull_request:
    branches:
      - develop

jobs:
  terraform-validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Fetch and Checkout Branches
        if: ${{ success() }}
        run: |
          git fetch origin
          git checkout develop
          git pull origin develop
          git fetch origin ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}

  test-and-validate:
    runs-on: ubuntu-latest
    needs: terraform-validate

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests and generate JaCoCo report
        run: mvn test jacoco:report

      - name: Check JaCoCo coverage
        run: |
          COVERAGE=$(mvn jacoco:report | grep -oP 'Total.*?(\d+)%' | grep -oP '\d+')
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Code coverage is below 80%: $COVERAGE%"
            exit 1
          fi

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Run PMD
        run: mvn pmd:check

      - name: Run OWASP Dependency-Check
        run: mvn org.owasp:dependency-check-maven:check

  create-or-update-pr:
    runs-on: ubuntu-latest
    needs: test-and-validate

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create or Update Pull Request to Main
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const { data: existingPullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'develop',
              base: 'main',
              state: 'open'
            });

            if (existingPullRequests.length > 0) {
              const pullRequest = existingPullRequests[0];
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number,
                title: 'Sync develop to main',
                body: 'This is an automated PR to sync changes from develop to main.'
              });
              console.log(`Updated pull request: ${pullRequest.html_url}`);
            } else {
              const { data: pullRequest } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Sync develop to main',
                head: 'develop',
                base: 'main',
                body: 'This is an automated PR to sync changes from develop to main.',
                draft: false
              });
              console.log(`Created pull request: ${pullRequest.html_url}`);
            }