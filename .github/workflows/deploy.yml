name: Deploy EC2 with Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./infra

      - name: Terraform Plan
        run: terraform plan -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -out=tfplan
        working-directory: ./infra

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./infra/tfplan

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./infra/tfplan

      - name: Apply Terraform Plan
        run: terraform apply -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -auto-approve ./infra/tfplan
        working-directory: ./infra

      - name: Retrieve EC2 Public IP
        id: get_ip
        run: |
          INSTANCE_IP=$(terraform output -raw instance_public_ip)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
        working-directory: ./infra

      - name: Deploy Application
        run: |
          ssh -o "StrictHostKeyChecking=no" ec2-user@$INSTANCE_IP << 'EOF'
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          nohup java -jar /path/to/myapp.jar > /dev/null 2>&1 &
          EOF